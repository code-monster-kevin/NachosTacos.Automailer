// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NachoTacos.Automailer.Data;

namespace NachoTacos.Automailer.Data.Migrations
{
    [DbContext(typeof(AutomailerContext))]
    [Migration("20191231091440_mvp-model-01")]
    partial class mvpmodel01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NachoTacos.Automailer.Domain.AutomailerModel", b =>
                {
                    b.Property<Guid>("AutomailerModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AutomailerTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnsubscribeLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutomailerModelId");

                    b.HasIndex("AutomailerTaskId");

                    b.ToTable("AutomailerModels");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.AutomailerTask", b =>
                {
                    b.Property<Guid>("AutomailerTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.HasKey("AutomailerTaskId");

                    b.ToTable("AutomailerTasks");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.Campaign", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Code = "DEF",
                            CampaignId = new Guid("905c3cbe-e2af-4323-add6-6b2350501da7"),
                            CreatedDate = new DateTime(2019, 12, 31, 9, 14, 39, 756, DateTimeKind.Utc).AddTicks(1380),
                            Description = "Default Campaign",
                            UpdatedDate = new DateTime(2019, 12, 31, 9, 14, 39, 756, DateTimeKind.Utc).AddTicks(1901)
                        });
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignActivity", b =>
                {
                    b.Property<Guid>("CampaignActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignTrackingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignActivityId");

                    b.ToTable("CampaignActivities");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignContact", b =>
                {
                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignId", "ContactId");

                    b.ToTable("CampaignContacts");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignSetting", b =>
                {
                    b.Property<Guid>("CampaignSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SendAfterJoined")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignSettingId");

                    b.ToTable("CampaignSettings");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignTracking", b =>
                {
                    b.Property<Guid>("CampaignTrackingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignSettingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignTrackingId");

                    b.ToTable("CampaignTrackings");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.Contact", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Unsubscribe")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Email");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.EmailTemplate", b =>
                {
                    b.Property<Guid>("EmailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmailTemplateId");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.AutomailerModel", b =>
                {
                    b.HasOne("NachoTacos.Automailer.Domain.AutomailerTask", null)
                        .WithMany("AutomailerModels")
                        .HasForeignKey("AutomailerTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
