// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NachoTacos.Automailer.Data;

namespace NachoTacos.Automailer.Data.Migrations
{
    [DbContext(typeof(AutomailerContext))]
    [Migration("20200102021841_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NachoTacos.Automailer.Domain.AutomailerModel", b =>
                {
                    b.Property<Guid>("AutomailerModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AutomailerTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnsubscribeLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutomailerModelId");

                    b.HasIndex("AutomailerTaskId");

                    b.ToTable("AutomailerModels");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.AutomailerTask", b =>
                {
                    b.Property<Guid>("AutomailerTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AutomailerTaskId");

                    b.ToTable("AutomailerTasks");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.Campaign", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Code = "DEF",
                            CampaignId = new Guid("905c3cbe-e2af-4323-add6-6b2350501da7"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 846, DateTimeKind.Utc).AddTicks(1118),
                            Description = "Default Campaign",
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 846, DateTimeKind.Utc).AddTicks(1638)
                        },
                        new
                        {
                            Code = "TEST",
                            CampaignId = new Guid("0ff7ff45-5250-44ca-9997-c4825b8092cb"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 847, DateTimeKind.Utc).AddTicks(8493),
                            Description = "A test campaign",
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 847, DateTimeKind.Utc).AddTicks(8510)
                        });
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignActivity", b =>
                {
                    b.Property<Guid>("CampaignActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignTrackingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignActivityId");

                    b.ToTable("CampaignActivities");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignContact", b =>
                {
                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignId", "ContactId");

                    b.ToTable("CampaignContacts");

                    b.HasData(
                        new
                        {
                            CampaignId = new Guid("0ff7ff45-5250-44ca-9997-c4825b8092cb"),
                            ContactId = new Guid("a0b46943-45b2-4b6c-bf07-8134339b667e"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4374),
                            JoinedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(3865),
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4377)
                        },
                        new
                        {
                            CampaignId = new Guid("0ff7ff45-5250-44ca-9997-c4825b8092cb"),
                            ContactId = new Guid("f9a46200-f300-402a-a91b-e26773560c76"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4462),
                            JoinedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4449),
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4463)
                        },
                        new
                        {
                            CampaignId = new Guid("0ff7ff45-5250-44ca-9997-c4825b8092cb"),
                            ContactId = new Guid("01134e10-a5a5-419c-8a33-5aa3404eb6c9"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4467),
                            JoinedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4466),
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4467)
                        },
                        new
                        {
                            CampaignId = new Guid("0ff7ff45-5250-44ca-9997-c4825b8092cb"),
                            ContactId = new Guid("794eb60f-d56f-433e-9f65-fc82987faefa"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4470),
                            JoinedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4469),
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 849, DateTimeKind.Utc).AddTicks(4471)
                        });
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignSetting", b =>
                {
                    b.Property<Guid>("CampaignSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SendAfterJoined")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignSettingId");

                    b.ToTable("CampaignSettings");

                    b.HasData(
                        new
                        {
                            CampaignSettingId = new Guid("be9d40a0-987e-46d4-8343-4f306aa4d0e5"),
                            Active = false,
                            CampaignId = new Guid("0ff7ff45-5250-44ca-9997-c4825b8092cb"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 850, DateTimeKind.Utc).AddTicks(3802),
                            EmailTemplateId = new Guid("e0b3fd72-8177-4e93-9627-a31603166643"),
                            SendAfterJoined = 1,
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 850, DateTimeKind.Utc).AddTicks(3809)
                        });
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.CampaignTracking", b =>
                {
                    b.Property<Guid>("CampaignTrackingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignSettingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignTrackingId");

                    b.ToTable("CampaignTrackings");
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.Contact", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Unsubscribe")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Email");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Email = "joe.test@mail.com",
                            ContactId = new Guid("a0b46943-45b2-4b6c-bf07-8134339b667e"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7522),
                            Name = "Joe Test",
                            Source = "seed data",
                            Unsubscribe = false,
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7528)
                        },
                        new
                        {
                            Email = "jane.test@mail.com",
                            ContactId = new Guid("f9a46200-f300-402a-a91b-e26773560c76"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7594),
                            Name = "Jane Test",
                            Source = "seed data",
                            Unsubscribe = false,
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7596)
                        },
                        new
                        {
                            Email = "ken.test@mail.com",
                            ContactId = new Guid("01134e10-a5a5-419c-8a33-5aa3404eb6c9"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7611),
                            Name = "Ken Test",
                            Source = "seed data",
                            Unsubscribe = false,
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7612)
                        },
                        new
                        {
                            Email = "kelly.test@mail.com",
                            ContactId = new Guid("794eb60f-d56f-433e-9f65-fc82987faefa"),
                            CreatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7615),
                            Name = "Kelly Test",
                            Source = "seed data",
                            Unsubscribe = false,
                            UpdatedDate = new DateTime(2020, 1, 2, 2, 18, 40, 848, DateTimeKind.Utc).AddTicks(7616)
                        });
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.EmailTemplate", b =>
                {
                    b.Property<Guid>("EmailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmailTemplateId");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            EmailTemplateId = new Guid("e0b3fd72-8177-4e93-9627-a31603166643"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailContent = "<b>Hi @Model.Name,<br />We are having a<font color= 'red' > Great </ font > offer today!<br />Don't miss it!<br /><a href='@Model.UnsubscribeLink'>Unsubscribe</a> <img src='@Model.TrackingLink' />",
                            EmailFrom = "tester1@nachotacos.com",
                            EmailSubject = "This is a test email",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NachoTacos.Automailer.Domain.AutomailerModel", b =>
                {
                    b.HasOne("NachoTacos.Automailer.Domain.AutomailerTask", null)
                        .WithMany("AutomailerModels")
                        .HasForeignKey("AutomailerTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
